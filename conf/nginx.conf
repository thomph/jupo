worker_processes  2;
user  nginx;

pid /var/log/jupo/nginx.pid;

# run in the foreground so supervisord can look after it
daemon off; 

events {
  worker_connections  4096;
  use epoll;
}


http {
  server_tokens off;
  include       mime.types;
  default_type  application/octet-stream;

  access_log off;
# error_log     /var/log/jupo/nginx.debug.log  debug;

  sendfile      off;
  tcp_nopush    on;
  tcp_nodelay   on;

  client_body_buffer_size     1K;
  client_header_buffer_size   1k;
  client_max_body_size        1k;
  large_client_header_buffers 4 8k;
  
  client_body_timeout   10;
  client_header_timeout 10;
  keepalive_timeout     5 5;
  send_timeout          10;

#  more_clear_headers ETag;
  more_set_headers "Server: jupo-ws";
  more_set_headers "X-Hacker: If you're reading this, you should visit play.jupo.com/jobs and apply to join the fun.";


  # Read requests handlers
  upstream app_servers {
    server 127.0.0.1:9000;
    server 127.0.0.1:9001;
    server 127.0.0.1:9002;
    server 127.0.0.1:9003;
  }
  
  # Write requests handlers
  upstream _app_servers {
    server 127.0.0.1:9500;
    server 127.0.0.1:9501;
    server 127.0.0.1:9502;
    server 127.0.0.1:9503;
  }
  
  upstream pubsub_servers {
    server 127.0.0.1:8000;
    server 127.0.0.1:8001;
    server 127.0.0.1:8002;
    server 127.0.0.1:8003;
  }
  
  upstream pingpong_servers {
    server 127.0.0.1:7000;
    server 127.0.0.1:7001;
  }
  
  
    
#  proxy_cache_path  /var/cache/nginx/  levels=1:2  keys_zone=images:500m max_size=400m;
#  
#  proxy_cache_key "$scheme://$http_host$request_uri";
#  proxy_cache_methods GET HEAD;
#  proxy_cache_min_uses 1;
#  proxy_cache_use_stale   updating;
#  
#  proxy_cache_valid   200   24h;  
#          
#  # enable proxy cache
#  add_header X-Cache $upstream_cache_status;
#  proxy_cache images;
  
  
  server {
    listen       80 default;
    server_name  jupo.com *.jupo.com; 
    
    keepalive_timeout    70;
    
    
    # output compression saves bandwidth
    gzip  on;
    gzip_http_version 1.1;
    gzip_vary on;
    gzip_comp_level 1;
    gzip_proxied any;
    gzip_types text/plain 
               text/css 
               application/json 
               application/x-javascript 
               text/xml 
               application/xml 
               application/xml+rss 
               text/javascript 
               application/javascript;
  
    # make sure gzip does not lose large gzipped js or css files
    # see http://blog.leetsoft.com/2007/7/25/nginx-gzip-ssl
    gzip_buffers 16 8k;
  
    # Disable gzip for certain browsers.
    gzip_disable msie6;
    
    client_max_body_size 100M; 
    
    error_page   502  /502.html;
    error_page   404  /404.html;

    
    location ~* ^/(502.html|404.html) {
      root /home/Workspace/jupo/src/templates;
    } 
    
        
    location ~* ^/proxy/(.*?)/(.*) {
      resolver 8.8.8.8;

      # Extract info from the request
      set $_host  $1;
      set $_uri   $2;

      # Set download request headers
      proxy_set_header Host $_host;
      proxy_set_header Authorization '';

      # Do not touch local disks when proxying content to clients
      proxy_max_temp_file_size 0;

      # Download the file and send it to client
      proxy_pass http://$_host/$_uri?$args;
    }
    
    location ~* ^/attachment/(.*?)\.(jpg|png) {
      
#      proxy_ignore_headers Set-Cookie Cache-Control Expires X-Accel-Expires; 
      
      proxy_set_header Host $http_host;
      proxy_set_header X-Scheme $scheme;
      
      expires max;
      
      proxy_pass http://app_servers;
    }
    
    location = /ping {
      # disable proxy cache
      proxy_cache off;
    
      proxy_redirect off;
      proxy_buffering off;
      proxy_pass_header Set-Cookie;
      proxy_pass_header Server;
      proxy_set_header Host $http_host;
      proxy_set_header Proxy-Connection "";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      proxy_pass http://pingpong_servers;
    } 
    
    location = /stream {
      # disable proxy cache
      proxy_cache off;
    
      proxy_redirect off;
      proxy_buffering off;
      proxy_pass_header Set-Cookie;
      proxy_pass_header Server;
      proxy_set_header Host $http_host;
      proxy_set_header Proxy-Connection "";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      proxy_pass http://pubsub_servers;
    } 
    
    location / {
      # disable proxy cache
      proxy_cache off;
      
      # Add expires header
      if ($request_uri ~* "\.(ico|otf|css|js|gif|jpe?g|png)(\?v?[0-9\.]+)?$") {
        expires 1y;
        add_header Cache-Control public;
        break;
      }
    
      proxy_redirect off;
      proxy_buffering off;
      proxy_pass_header Set-Cookie;
      proxy_pass_header Server;
      proxy_set_header Host $http_host;
      proxy_set_header Proxy-Connection "";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      proxy_pass http://_app_servers;
      
      # For (GET, OPTIONS) requests that *aren't* a POST
      limit_except POST {
        proxy_pass http://app_servers;
      }
    } 
    
    
  }
  
  
}
